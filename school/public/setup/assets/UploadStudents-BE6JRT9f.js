var P=Object.defineProperty,R=Object.defineProperties;var H=Object.getOwnPropertyDescriptors;var _=Object.getOwnPropertySymbols;var V=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;var A=(s,e,i)=>e in s?P(s,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[e]=i,Y=(s,e)=>{for(var i in e||(e={}))V.call(e,i)&&A(s,i,e[i]);if(_)for(var i of _(e))I.call(e,i)&&A(s,i,e[i]);return s},L=(s,e)=>R(s,H(e));var m=(s,e,i)=>new Promise((u,t)=>{var r=n=>{try{a(i.next(n))}catch(p){t(p)}},l=n=>{try{a(i.throw(n))}catch(p){t(p)}},a=n=>n.done?u(n.value):Promise.resolve(n.value).then(r,l);a((i=i.apply(s,e)).next())});import{g as G,a as x,b as T,e as U}from"./apiUtils-CCQy72K0.js";import{u as S,r as j}from"./xlsx-CZX1Z_DZ.js";import{_ as B,c,b as o,f as b,g as k,F as y,h as C,j as D,t as w,i as O,n as q,o as d,v as z}from"./index-BsE_pyWB.js";const Z={data(){return{academicYears:[],displayYears:[],selectedYear:null,classes:[],divisions:[],selectedClass:null,selectedDivision:null,mappings:[],fileSelected:null,studentsList:[],options:["First Name","Middle Name","Last Name","Email Address","Phone Number","GR Number","Roll No"],isLoading:!1,message:null,previewData:[],previewHeaders:[],editHistory:[],pendingEdits:[]}},created(){this.fetchAcademicYears(),this.fetchClasses(),this.debouncedSendCellUpdate=this.debounce(this.sendCellUpdate,500)},methods:{fetchAcademicYears(){return m(this,null,function*(){try{const s=yield G({values:{}});console.log("getAcademicYears API response:",s),s&&Array.isArray(s.message)?(this.academicYears=s.message,this.displayYears=this.academicYears.map((e,i)=>({original:e,display:i===0?`${e} - Current Year`:e})),this.academicYears.length>0&&(this.selectedYear=this.academicYears[0]),console.log("Processed academic years:",this.academicYears)):(this.academicYears=[],this.displayYears=[],console.warn("No valid academic years found in response"),this.showMessage("No academic years available","error"))}catch(s){console.error("Error fetching academic years:",s),this.academicYears=[],this.displayYears=[],this.showMessage("Error fetching academic years: "+(s.message||"Unknown error"),"error")}})},fetchClasses(){return m(this,null,function*(){try{const s=yield x({values:{}});console.log("getClasses API response:",s),s&&s.message&&Array.isArray(s.message)?(this.classes=s.message.map(e=>e.name).filter(e=>e),console.log("Processed classes:",this.classes)):(this.classes=[],console.warn("No valid classes found in response"),this.showMessage("No classes available","error"))}catch(s){console.error("Error fetching classes:",s),this.classes=[],this.showMessage("Error fetching classes: "+(s.message||"Unknown error"),"error")}})},onYearChange(){return m(this,null,function*(){this.selectedClass=null,this.selectedDivision=null,this.divisions=[],yield this.onClassChange()})},onClassChange(){return m(this,null,function*(){if(this.selectedDivision=null,this.divisions=[],this.selectedClass&&this.selectedYear)try{const s=yield T({values:{classId:this.selectedClass,academicYear:this.selectedYear}});console.log("getDivisions2 API response:",s),this.divisions=s.message?s.message.map(e=>e.name).filter(e=>e):[],console.log(`Divisions for ${this.selectedClass} in ${this.selectedYear}:`,this.divisions)}catch(s){console.error("Error fetching divisions:",s),this.showMessage(`Error fetching divisions for ${this.selectedClass} in ${this.selectedYear}`,"error")}})},getExcelColumnLetter(s){let e="";for(;s>=0;)e=String.fromCharCode(65+s%26)+e,s=Math.floor(s/26)-1;return e},handleFileSelection(){return m(this,null,function*(){const s=document.createElement("input");s.type="file",s.accept=".xlsx,.xls,.csv",s.onchange=e=>m(this,null,function*(){const i=e.target.files[0];if(i){this.fileSelected=i,this.showMessage(null);try{const{data:u,headers:t}=yield this.readExcelFile(i);this.previewData=u.slice(0,100),this.previewHeaders=t,this.mappings=t.map((r,l)=>({type:null,column:S.encode_col(l)})),this.autoDetectMappings(t)}catch(u){console.error("Error loading preview:",u),this.showMessage("Error loading file preview","error")}}}),s.click()})},removeFile(){this.fileSelected=null,this.previewData=[],this.previewHeaders=[],this.mappings=[],this.editHistory=[],this.pendingEdits=[],this.showMessage(null)},prepareStudentsData(s,e=null){let i=s;e!==null&&(i=[s[e]]);const t=i.map(r=>{const l={"First Name":"","Middle Name":"","Last Name":"",Name:"","Email Address":"","Phone Number":"","GR Number":"","Roll No":""};return this.mappings.forEach(({type:a,column:n})=>{var p;if(a)try{const g=S.decode_col(n),N=this.previewHeaders[g],h=((p=r[N])==null?void 0:p.toString().trim())||"";l[a]=h}catch(g){console.error(`Error mapping column ${n} for type ${a}:`,g)}}),l}).filter(r=>Object.values(r).some(l=>l!==""));return Y({academicYear:this.selectedYear,className:this.selectedClass,divisionName:this.selectedDivision,students:t},this.options.reduce((r,l)=>{const a=this.mappings.find(n=>n.type===l);return r[l]=a?a.column:"None",r},{}))},handleEnrollStudents(){return m(this,null,function*(){console.log("Enroll button clicked");const s=["First Name","GR Number","Last Name","Roll No"],e=this.mappings.map(t=>t.type).filter(t=>t),i=s.filter(t=>!e.includes(t));if(i.length>0){const t=`Please map the following required fields: ${i.join(", ")}`;console.error(t),this.showMessage(t,"error");return}if(this.mappings.filter(t=>t.type&&(!t.column||!/^[A-Z]+$/.test(t.column))).length>0){this.showMessage("Please check your column mappings - some are invalid","error");return}if(!this.selectedYear||!this.selectedClass||!this.selectedDivision){const t="Please select an academic year, class, and division";console.error(t),this.showMessage(t,"error");return}if(!this.fileSelected){const t="Please select a file first";console.error(t),this.showMessage(t,"error");return}this.isLoading=!0,this.showMessage(null);try{if(this.previewData.length===0)throw new Error("No data available to enroll");const t=this.prepareStudentsData(this.previewData);console.log("Sending updated preview data to enrollStudents:",t);const r=yield U(t);r.success?(this.showMessage("✅ Students enrolled successfully!","success"),this.pendingEdits=[]):(this.showMessage(r.error||"Failed to enroll students","error"),console.error("Enrollment error details:",{error:r.error,duplicates:r.duplicates,message:r.message}))}catch(t){console.error("Error enrolling students:",t),this.showMessage(t.message||"Unexpected error during enrollment","error")}finally{this.isLoading=!1}})},autoDetectMappings(s){const e={"First Name":["first","fname","given"],"Last Name":["last","lname","surname"],"Middle Name":["middle","mname"],"Email Address":["email","mail"],"Phone Number":["phone","mobile","contact"],"GR Number":["gr","grno","gr_num"],"Roll No":["roll","rollno","roll_num"]};s.forEach((i,u)=>{if(!i)return;const t=i.toLowerCase();for(const[r,l]of Object.entries(e))if(l.some(a=>t.includes(a))){this.mappings[u].type=r;break}}),console.log("Auto-detected mappings:",this.mappings)},readExcelFile(s){return m(this,null,function*(){return new Promise((e,i)=>{const u=new FileReader;u.onload=t=>{try{const r=new Uint8Array(t.target.result),l=j(r,{type:"array",sheetStubs:!0}),a=l.Sheets[l.SheetNames[0]],n=S.decode_range(a["!ref"]);let p=0;for(let h=n.s.r;h<=n.e.r;++h){let f=!1;for(let E=n.s.c;E<=n.e.c;++E){const v=a[S.encode_cell({c:E,r:h})];if(v&&v.v!==void 0&&v.v!==null&&v.v!==""){f=!0;break}}if(f){p=h;break}}const g=[];for(let h=n.s.c;h<=n.e.c;++h){const f=a[S.encode_cell({c:h,r:p})];g.push(f?String(f.v).trim():`Column ${h+1}`)}const N=[];for(let h=p+1;h<=n.e.r;++h){const f={};let E=!1;for(let v=n.s.c;v<=n.e.c;++v){const M=a[S.encode_cell({c:v,r:h})],F=g[v-n.s.c];f[F]=M?M.v===void 0?"":M.v:"",f[F]!==""&&(E=!0)}E&&N.push(f)}e({data:N,headers:g})}catch(r){i(r)}},u.onerror=t=>i(t),u.readAsArrayBuffer(s)})})},updateMapping(s,e,i){this.$set(this.mappings,s,L(Y({},this.mappings[s]),{[e]:i,column:S.encode_col(s)}))},deleteRow(s){this.previewData.splice(s,1),this.editHistory=this.editHistory.filter(e=>e.rowIndex!==s),this.pendingEdits=this.pendingEdits.filter(e=>e.rowIndex!==s),this.showMessage("Row deleted","success")},showMessage(s,e="info"){this.message=s?{text:s,type:e}:null,s&&e!=="error"&&e!=="success"&&setTimeout(()=>this.showMessage(null),5e3)},handleCellEdit(s,e,i){const t=this.previewData[s][e]||"";if(t!==i){const r={rowIndex:s,column:e,oldValue:t,newValue:i,timestamp:new Date().toISOString()};this.editHistory.push(r),this.pendingEdits.push(r),console.log("Cell edit recorded:",r),this.debouncedSendCellUpdate()}},debounce(s,e){let i;return function(...u){clearTimeout(i),i=setTimeout(()=>s.apply(this,u),e)}},sendCellUpdate(){return m(this,null,function*(){if(this.pendingEdits.length!==0){this.isLoading=!0;try{const s=this.pendingEdits[this.pendingEdits.length-1],e=this.prepareStudentsData(this.previewData,s.rowIndex);console.log("Sending cell update via enrollStudents:",e);const i=yield U(e);i.success?(this.showMessage("Cell update saved successfully","success"),this.pendingEdits=[]):this.showMessage(i.error||"Failed to save cell update","error")}catch(s){console.error("Error sending cell update:",s),this.showMessage(`Failed to save cell update: ${s.message||"Unknown error"}`,"error")}finally{this.isLoading=!1}}})},undoLastEdit(){const s=this.editHistory.pop();if(s){const{rowIndex:e,column:i,oldValue:u}=s;this.previewData[e][i]=u,this.pendingEdits=this.pendingEdits.filter(t=>t!==s),this.showMessage("Last edit undone","success")}else this.showMessage("No edits to undo","info")}}},J={class:"scroll-view-content"},K={class:"white-card"},Q=["value"],W=["value"],X={key:0,class:"card-title"},$=["value"],ee={class:"white-card"},se={key:0,class:"file-selected"},te={class:"button-text"},le={class:"white-card"},ie=["disabled"],re={key:0,class:"button-text"},ne={key:1,class:"button-text"},oe={key:0,class:"white-card preview-card"},ae={class:"table-container"},ce={class:"preview-table"},de=["onUpdate:modelValue","onChange"],ue=["value"],he={class:"header-label"},pe={class:"actions"},ge=["onClick"],me=["onUpdate:modelValue","onInput","placeholder"];function fe(s,e,i,u,t,r){return d(),c("div",J,[e[20]||(e[20]=o("h1",{class:"title"},"Students Enrollment Screen",-1)),o("div",K,[e[11]||(e[11]=o("h2",{class:"card-title"},"Select a Year",-1)),b(o("select",{"onUpdate:modelValue":e[0]||(e[0]=l=>t.selectedYear=l),class:"picker2",onChange:e[1]||(e[1]=(...l)=>r.onYearChange&&r.onYearChange(...l))},[e[8]||(e[8]=o("option",{value:null},"Select a Year",-1)),(d(!0),c(y,null,C(t.displayYears,l=>(d(),c("option",{key:l,value:l.original},w(l.display),9,Q))),128))],544),[[k,t.selectedYear]]),e[12]||(e[12]=o("h2",{class:"card-title"},"Class / Program",-1)),b(o("select",{"onUpdate:modelValue":e[2]||(e[2]=l=>t.selectedClass=l),class:"picker2",onChange:e[3]||(e[3]=(...l)=>r.onClassChange&&r.onClassChange(...l))},[e[9]||(e[9]=o("option",{value:null},"Select a Class / Program",-1)),(d(!0),c(y,null,C(t.classes,l=>(d(),c("option",{key:l,value:l},w(l),9,W))),128))],544),[[k,t.selectedClass]]),t.divisions.length>0?(d(),c("h2",X,"Division / Student Group")):D("",!0),t.divisions.length>0?b((d(),c("select",{key:1,"onUpdate:modelValue":e[4]||(e[4]=l=>t.selectedDivision=l),class:"picker2"},[e[10]||(e[10]=o("option",{value:null},"Select a Division / Student Group",-1)),(d(!0),c(y,null,C(t.divisions,l=>(d(),c("option",{key:l,value:l},w(l),9,$))),128))],512)),[[k,t.selectedDivision]]):D("",!0)]),o("div",ee,[e[13]||(e[13]=o("h2",{class:"card-title"},"Upload Student Data",-1)),t.fileSelected?(d(),c("div",se,[o("span",null,"Selected file: "+w(t.fileSelected.name),1),o("button",{onClick:e[5]||(e[5]=(...l)=>r.removeFile&&r.removeFile(...l)),class:"remove-file-btn"},"×")])):D("",!0),o("button",{class:"button",onClick:e[6]||(e[6]=(...l)=>r.handleFileSelection&&r.handleFileSelection(...l))},[o("span",te,w(t.fileSelected?"Change File":"Upload File 📤"),1)])]),o("div",le,[o("button",{class:"button",onClick:e[7]||(e[7]=(...l)=>r.handleEnrollStudents&&r.handleEnrollStudents(...l)),disabled:t.isLoading||!t.selectedYear||!t.selectedClass||!t.selectedDivision||!t.fileSelected},[t.isLoading?(d(),c("span",re,e[14]||(e[14]=[o("span",{class:"spinner"},null,-1),O(" Processing... ")]))):(d(),c("span",ne,"Enroll Students ✅"))],8,ie),t.message?(d(),c("div",{key:0,class:q(["message",t.message.type])},w(t.message.text),3)):D("",!0)]),t.fileSelected&&t.previewData.length>0?(d(),c("div",oe,[e[19]||(e[19]=o("h2",{class:"card-title"},"File Preview (First 100 rows)",-1)),o("div",ae,[o("table",ce,[o("thead",null,[o("tr",null,[e[15]||(e[15]=o("th",{class:"actions"},"Actions",-1)),(d(!0),c(y,null,C(t.previewHeaders,(l,a)=>(d(),c("th",{key:"letter-"+a},w(r.getExcelColumnLetter(a)),1))),128))]),o("tr",null,[e[17]||(e[17]=o("th",{class:"actions"},null,-1)),(d(!0),c(y,null,C(t.previewHeaders,(l,a)=>(d(),c("th",{key:"header-"+a},[b(o("select",{"onUpdate:modelValue":n=>t.mappings[a].type=n,class:"table-select",onChange:n=>r.updateMapping(a,"type",n.target.value)},[e[16]||(e[16]=o("option",{value:null},"Select Field",-1)),(d(!0),c(y,null,C(t.options,(n,p)=>(d(),c("option",{key:p,value:n},w(n),9,ue))),128))],40,de),[[k,t.mappings[a].type]]),o("span",he,w(l),1)]))),128))])]),o("tbody",null,[(d(!0),c(y,null,C(t.previewData,(l,a)=>(d(),c("tr",{key:a},[o("td",pe,[o("button",{onClick:n=>r.deleteRow(a),class:"trash-icon2"},e[18]||(e[18]=[o("span",{class:"icon"},"❎",-1)]),8,ge)]),(d(!0),c(y,null,C(t.previewHeaders,(n,p)=>(d(),c("td",{key:p},[b(o("input",{"onUpdate:modelValue":g=>l[n]=g,class:"table-input",onInput:g=>r.handleCellEdit(a,n,g.target.value),placeholder:l[n]||"-"},null,40,me),[[z,l[n]]])]))),128))]))),128))])])])])):D("",!0)])}const Se=B(Z,[["render",fe],["__scopeId","data-v-cdba7ed6"]]);export{Se as default};
